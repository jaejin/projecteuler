%%%-------------------------------------------------------------------
%%% @author jaejin <>
%%% @copyright (C) 2012, jaejin
%%% @doc
%%% Triangle, pentagonal, and hexagonal numbers are generated by the following formulae:

%% Triangle	 	Tn=n(n+1)/2	 	1, 3, 6, 10, 15, ...
%% Pentagonal	 	Pn=n(3n1)/2	 	1, 5, 12, 22, 35, ...
%% Hexagonal	 	Hn=n(2n1)	 	1, 6, 15, 28, 45, ...
%% It can be verified that T285 = P165 = H143 = 40755.

%% Find the next triangle number that is also pentagonal and hexagonal.
%%% @end
%%% Created : 15 Feb 2012 by jaejin <>
%%%-------------------------------------------------------------------
-module(euler45).
-compile(export_all).

test_pentagonal_number(N) when N > 0 ->
    R = (math:sqrt(24*N+1)+1)/6,
    R - erlang:round(R) =:= 0.0;
test_pentagonal_number(N) when N =< 0 ->
    false.

test_triangle_number(N) when N > 0 ->
    R = (math:sqrt(8*N+1)-1)/2,
    R - erlang:round(R) =:= 0.0;
test_triangle_number(N) when N =< 0 ->
    false.



triangle(N)->
    (N*(N+1)) div 2.

pentagonal(N)->
    (N*(3*N-1)) div 2.

hexagonal(N)->
    (N*(2*N-1)).

find(N)->
    [C || C <- lists:map(fun hexagonal/1,lists:seq(1,N)),
                     test_pentagonal_number(C) =:= true,
          test_triangle_number(C) =:= true
    ].
